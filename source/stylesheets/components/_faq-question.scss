.faq-item {
}

.faq-item > * {
  padding: $leading * 1rem;
  margin-bottom: $leading * 1rem;

  border-radius: $rounded-corner;
}

.faq-item__question {
  $gradient-steps: rgb(0, 172, 193),
  rgb(0, 151, 167),
  rgb(0, 131, 143),
  rgb(0, 137, 123),
  rgb(0, 121, 107),
  rgb(0, 105, 92),
  rgb(67, 160, 71),
  rgb(56, 142, 60),
  rgb(46, 125, 50);
  $left-border: 10px;
  $i: 0;

  padding-left: calc(#{$leading * 1rem} - #{$left-border});

  color: palette('text', 'dark');

  background-image: image('opener.png');
  background-position: right #{$leading * 1rem} top 50%;
  background-color: palette('white');

  border-left-width: $left-border;
  border-left-style: solid;

  box-shadow: 0 0 6px 0 palette('shadow');

  /* @2x Images (Pixel Ratio of 1.25+) */
  @media only screen and (min-device-pixel-ratio: 1.25), only screen and (min-resolution: 120dpi), only screen and (min-resolution: 1.25dppx) {
    background-image: image('opener@2x.png');
  }

  /* @3x Images (Pixel Ratio of 2.25+) */
  @media only screen and (min-device-pixel-ratio: 2.25), only screen and (min-resolution: 216dpi), only screen and (min-resolution: 2.25dppx) {
    background-image: image('opener@3x.png');
  }

  &::before,
  [open] &::before {
    content: none;
  }

  @each $color in $gradient-steps {
    $i: $i + 1;

    :nth-child(#{$i}n) > & {
      border-left-color: $color;
    }
  }
}

.faq-item__answer {
  background-color: palette('shadow', 'reverse');
}

.faq-item__answer > :last-child {
  margin-bottom: 0;
}
